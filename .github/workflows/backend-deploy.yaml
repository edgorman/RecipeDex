name: Backend Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      service_suffix:
        required: false
        default: ''
        type: string
      image_tag:
        required: true
        type: string
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_PROJECT_REGION:
        required: true
      GCP_SERVICE_ACCOUNT:
        required: true
    outputs:
      backend-api:
        value: ${{ jobs.deploy-service.outputs.backend-api }}

jobs:
  deploy-service:
    name: Deploy Service
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    outputs:
      backend-api: ${{ steps.deploy.outputs.url }}

    steps:
      - id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: .

      - id: authenticate
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - id: setup
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - id: push
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev
          docker load -i backend.tar
          docker tag backend ${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/recipedex/backend:${{ inputs.image_tag }}
          docker push ${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/recipedex/backend:${{ inputs.image_tag }}
          if [ -n "${{ inputs.service_suffix }}" ]; then
            docker tag backend ${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/recipedex/backend:backend${{ inputs.service_suffix }}
            docker push ${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/recipedex/backend:backend${{ inputs.service_suffix }}
          fi

      - id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: backend${{ inputs.service_suffix }}
          image: ${{ secrets.GCP_PROJECT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/recipedex/backend:${{ inputs.image_tag }}
          region: ${{ secrets.GCP_PROJECT_REGION }}
          env_vars: |-
            GOOGLE_CLOUD_PROJECT=${{ secrets.GCP_PROJECT_ID }}

      # TODO: should restrict this in the future for public access
      - id: config
        run: |
          gcloud run services update backend${{ inputs.service_suffix }} \
            --region="${{ secrets.GCP_PROJECT_REGION }}" \
            --ingress="all"
          gcloud run services add-iam-policy-binding backend${{ inputs.service_suffix }} \
            --region="${{ secrets.GCP_PROJECT_REGION }}" \
            --member="allUsers" \
            --role="roles/run.invoker"

  preview-comment:
    name: Preview Comment
    needs: deploy-service
    if: ${{ github.event_name == 'pull_request' && needs.deploy-service.result == 'success' && inputs.service_suffix != '' }}
    runs-on: ubuntu-latest
    steps:
      - id: find
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Create or Update Action

      - id: sha
        uses: benjlevesque/short-sha@v3.0

      - id: comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Visit the preview URL for this PR (updated for commit ${{ steps.sha.outputs.sha }}):

            ${{ needs.deploy-service.outputs.backend-api }}

            <sub>(expires when the PR is closed)</sub>

            <sub>üî• via [Create or Update Action](https://github.com/peter-evans/create-or-update-comment) üßë‚Äçüíª</sub>
          edit-mode: replace
